// mint 2
// Constants for ports and status flags
#10 DATA_PORT !
#11 COMMAND_PORT !
#12 STATUS_PORT !
#80 BUSY !
#1E ERROR_MASK !
#6C SADD !

// Variables
:RESULT 0 0 ;  // 16-bit result storage (high and low)
:ERROR 0 ;     // 8-bit error storage

// Initialize arguments
:INIT
  1 a !  // Set arg1 to 1
  1 b !  // Set arg2 to 1
;

// Store arguments in FPU
:STORE
  a DATA_PORT /O      // Push arg1 lower byte
  a } DATA_PORT /O    // Push arg1 higher byte (shift right for high byte)
  b DATA_PORT /O      // Push arg2 lower byte
  b } DATA_PORT /O    // Push arg2 higher byte (shift right for high byte)
;

// Send add command to FPU
:ADD
  SADD COMMAND_PORT /O
;

// Wait until FPU is not busy
:WAIT
  /U ( STATUS_PORT /I BUSY & /W )  // Loop until BUSY bit is clear
;

// Store any error code
:ERROR
  STATUS_PORT /I ERROR_MASK & { ERROR !  // Mask status, shift left, store
;

// Pop result from FPU and store it
:POP
  DATA_PORT /I l !      // Get lower byte
  DATA_PORT /I h !      // Get higher byte
  h 8 { l + RESULT !    // Combine bytes (shift left high byte) and store in RESULT
;

// Main program
:START
  INIT STORE ADD WAIT ERROR POP  // Execute main logic
  /U ( /K )  // Infinite wait for key input
;

// Run the program
START
